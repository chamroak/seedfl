#!/bin/bash

export LD_LIBRARY_PATH=/u/tianyug/project/cudnn-linux-x86_64-8.7.0.84_cuda11-archive/lib:$LD_LIBRARY_PATH
source ~/project/.venv3.8/bin/activate

SEEDs=(42 13 21 87 100)
BSs=(2 4 8)
LRs=(1e-4 5e-4 1e-3 5e-3 1e-2)
# EPOCHs=(2 5 10)

LOGITS=$(jq -n '{"SNLI": 3, "MNLI": 3, "trec": 6, "sst-5": 5}["'$TASK'"] // 2')

INDEX=$SLURM_ARRAY_TASK_ID

SEED_INDEX=$(expr $INDEX % 5)
BS_INDEX=$(expr $INDEX / 5 % 3)
LR_INDEX=$(expr $INDEX / 15 % 5)
# EPOCH_INDEX=$(expr $INDEX / 75)

echo $SEED_INDEX, $BS_INDEX, $LR_INDEX # $EPOCH_INDEX

SEED=${SEEDs[$SEED_INDEX]}
BS=${BSs[$BS_INDEX]}
LR=${LRs[$LR_INDEX]}
# EPOCH=${EPOCHs[$EPOCH_INDEX]}

K=16
TAG=k16-opt125m-sgd

echo "Seed: $SEED"
echo "BS: $BS"
echo "LR: $LR"
# echo "EPOCH: $EPOCH"

STEP=1000 # $(expr $EPOCH \* $K \* $LOGITS / $BS)
EVAL_STEP=100
echo "Step: $STEP"


TYPE=prompt GRID_TAG=seed$SEED-bs$BS-lr$LR-step$STEP-evalstep$EVAL_STEP STEPS=$STEP TASK=$TASK TAG=$TAG SEED=$SEED MODEL=facebook/opt-125m K=$K WANDB_MODE=offline \
    bash run_fewshot_opt.sh --per_device_train_batch_size $BS --per_device_eval_batch_size 4 --learning_rate $LR  --optimizer "sgd" --evaluate_during_training --eval_steps $EVAL_STEP
